version: "3.8"
services:
  cache:
    image: redis:alpine
    container_name: cache
    command: ["redis-server", "--appendonly", "yes"]
  db-writer:
    image: devoptimus/postgres
    container_name: db-writer
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
  db-reader:
    image: devoptimus/postgres
    container_name: db-reader
    env_file:
      - .env
    environment:
      - REPLICATION_MODE=slave
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    depends_on:
      db-writer:
        condition: service_healthy
  app-install:
    build:
      context: .
      dockerfile: Dockerfile
      target: cli
    env_file:
      - .env
    command: ["php", "artisan", "app:install"]
    depends_on:
      db-reader:
        condition: service_healthy
  api-fpm:
    build:
      context: .
      dockerfile: Dockerfile
      target: fpm
    container_name: api-fpm
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "nc", "-z", "127.0.0.1", "9000"]
      interval: 5s
      timeout: 5s
      retries: 5
    depends_on:
      app-install:
        condition: service_completed_successfully
  grpc:
    build:
      context: .
      dockerfile: Dockerfile
      target: grpc
    container_name: grpc
    env_file:
      - .env
    depends_on:
      app-install:
        condition: service_completed_successfully
    ports:
      - "50051:50051"
  api-nginx:
    build:
      context: .
      dockerfile: Dockerfile
      target: nginx
    container_name: api-nginx
    env_file:
      - .env
    depends_on:
      api-fpm:
        condition: service_healthy
    ports:
      - "8010:80"
