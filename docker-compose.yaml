version: '3.8'
services:
  redis:
    image: redis:alpine
    container_name: redis
    command: ['redis-server', '--appendonly', 'yes']
  #
  # database writer
  #
  db-writer:
    container_name: db-writer
    image: devoptimus/postgres
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD_SUPER:-postgres}
      - POSTGRES_USERNAME=${DB_USERNAME_SUPER:-postgres}
      - REPLICANT_USERNAME=replicant
      - REPLICANT_PASSWORD=replicant
      - LOG_STATEMENT=none
    healthcheck:
      test: ['CMD', 'pg_isready', '-q']
      interval: 15s
    volumes:
      - ./data/db-writer:/var/lib/postgresql
  #
  # database reader
  #
  db-reader:
    container_name: db-reader
    image: devoptimus/postgres
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD_SUPER:-postgres}
      - POSTGRES_USERNAME=${DB_USERNAME_SUPER:-postgres}
      - REPLICANT_USERNAME=replicant
      - REPLICANT_PASSWORD=replicant
      - MASTER_SERVER=db-writer
      - MASTER_PORT=5432
      - SLOT_NAME=master
      - LOG_STATEMENT=none
    healthcheck:
      test: ['CMD', 'pg_isready', '-q']
      interval: 15s
    volumes:
      - ./data/db-reader:/var/lib/postgresql
    depends_on:
      db-writer:
        condition: service_healthy
  #
  # app install sidecar
  #
  app-install:
    container_name: ged-client-cli
    build:
      context: .
      dockerfile: Dockerfile
      target: cli
    image: devoptimus/ged-client-cli
    env_file: .env
    command: ['php', 'artisan', 'app:install']
    depends_on:
      db-writer:
        condition: service_healthy
      db-reader:
        condition: service_healthy
  #
  # php fpm
  #
  client-fpm:
    container_name: ged-client-fpm
    build:
      context: .
      target: fpm
    image: devoptimus/ged-client-fpm
    env_file: .env
    volumes:
      - ./storage/app:/home/app/public_html/storage/app
    healthcheck:
      test: ['CMD', 'nc', '-z', '127.0.0.1', '9000']
      interval: 15s
    depends_on:
      app-install:
        condition: service_completed_successfully
  #
  # ngix
  #
  client-nginx:
    container_name: ged-client-nginx
    build:
      context: .
      target: nginx
    image: devoptimus/ged-client-nginx
    ports:
      - 8010:80
    environment:
      - FPM_HOST="ged-client-fpm:9000"
    depends_on:
      client-fpm:
        condition: service_healthy
  #
  # grpc server
  #
  client-grpc:
    container_name: ged-grpc-server
    image: devoptimus/ged-grpc-server
    env_file: .env
    volumes:
      - ./storage/app:/home/app/public_html/storage/app
    depends_on:
      app-install:
        condition: service_completed_successfully
    ports:
      - 50051:50051
