version: '3.8'
services:
  redis-client:
    container_name: redis-client
    build:
      context: .
      dockerfile: Dockerfile
      target: cache
    image: devoptimus/redis
  postgres-writer:
    container_name: postgres-writer
    image: devoptimus/postgres
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD_SUPER:-postgres}
      - POSTGRES_USERNAME=${DB_USERNAME_SUPER:-postgres}
      - REPLICANT_USERNAME=replicant
      - REPLICANT_PASSWORD=replicant
      - LOG_STATEMENT=none
    healthcheck:
      test: ["CMD", "pg_isready", "-q"]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 10s
  postgres-reader:
    container_name: postgres-reader
    image: devoptimus/postgres
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD_SUPER:-postgres}
      - POSTGRES_USERNAME=${DB_USERNAME_SUPER:-postgres}
      - REPLICANT_USERNAME=replicant
      - REPLICANT_PASSWORD=replicant
      - MASTER_SERVER=postgres-writer
      - MASTER_PORT=5432
      - SLOT_NAME=master
      - LOG_STATEMENT=none
    healthcheck:
      test: ["CMD", "pg_isready", "-q"]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 10s
    depends_on:
      postgres-writer:
        condition: service_healthy
  app-install:
    container_name: ged-client-cli
    build:
      context: .
      dockerfile: Dockerfile
      target: cli
    image: devoptimus/ged-client-cli
    env_file: .env
    command: ["php", "artisan", "app:install"]
    depends_on:
      postgres-writer:
        condition: service_healthy
      postgres-reader:
        condition: service_healthy
  client-fpm:
    container_name: ged-client-fpm
    build:
      context: .
      target: fpm
    image: devoptimus/ged-client-fpm
    env_file: .env
    volumes:
      - ./storage/app:/home/app/public_html/storage/app
    healthcheck:
      test: ["CMD", "nc", "-z", "127.0.0.1", "9000"]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 10s
    depends_on:
      postgres-writer:
        condition: service_healthy
      postgres-reader:
        condition: service_healthy
      app-install:
        condition: service_completed_successfully
  client-nginx:
    container_name: ged-client-nginx
    build:
      context: .
      target: nginx
    image: devoptimus/ged-client-nginx
    ports:
      - 8010:80
    environment:
      - FPM_HOST="ged-client-fpm:9000"
    depends_on:
      client-fpm:
        condition: service_healthy
  client-grpc:
    container_name: ged-client-grpc
    build:
      context: .
      target: grpc
    image: devoptimus/ged-client-grpc
    env_file: .env
    volumes:
      - ./storage/app:/home/app/public_html/storage/app
    depends_on:
      postgres-reader:
        condition: service_healthy
      postgres-writer:
        condition: service_healthy
      app-install:
        condition: service_completed_successfully
    ports:
      - 50051:50051
